spring.application.name=product-service
eureka.client.service-url.defaultZone= http://localhost:8761/eureka
spring.config.import=configserver:http://localhost:8888
server.port=8082

#bean tan?mlar?yla ilgili ayn? isimde yaz?lan beanlerde ikincinin ilkinin üzerine yaz?lams?na izin verir
spring.main.allow-bean-definition-overriding=true 
#beanlerin ba??ml?l?klar?yla ilgili
spring.main.allow-circular-references=true
#hatalar?n kontrolü için var olan hata sayfalar?n?n görünüp görünmeyece?ini kontrol eder
server.error.whitelabel.enabled=true
#api yan?tlar?na hata mesaj?n? belirtmek için kullan?l?r
api.result.erorr=Genel Exception
#Tüm hatalar?n merkezi bir ?ekilde yönetilmesini sa?lar.
api.result.message=Rest Global Handling Exception


#Database Config
spring.datasource.url=jdbc:postgresql://localhost:5432/eCommerce
spring.datasource.username=postgres
spring.datasource.password= 12345
#postgre veritaban?na ba?lanabilmek için gerekli sürücü
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.show-sql=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#create:veritaban? ?emas?n? olu?turur e?er tablolar varsa siler tekrar olu?turur
#create-drop :veritaban? ?emas?n? olu?turur e?er tablolar varsa siler tekrar olu?turur
#validate : var olan tablolar? kar??la?t?r?r herhangi bir de?i?iklik yapmaz
#update  :  veri taban? silmez  yeni tablolar ekler veya güncellemeler yapar.




#loglama
#spring boot loglar?n?n bu dosyaya yaz?lmas?n? sa?lar
#logging.file.name=./log/blog.log

#log seviyesini debug olarak ayarlar.
logging.level.org.springframework.web=DEBUG

#hibernate ile ilgi log seviyelerini belirler
logging.level.org.hibernate=ERROR

# info seviyesindeki loglar uygulaman?n düzgün çal??t??? ile ilgili bilgi verir
logging.level.root=INFO


#spring.profiles.active=dev

